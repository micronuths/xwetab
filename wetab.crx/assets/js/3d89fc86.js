"use strict"; (globalThis.webpackChunkinfinity_hitab_client = globalThis.webpackChunkinfinity_hitab_client || []).push([[8828], { 24780: (t, e, a) => { a.d(e, { L: () => n }); var l = a(10435), o = a(65534); const i = [{ name: "自然", type: "nature", cover: GlobalGetApi+"https://static.wetab.link/hitab/wallpaper-cover/natrue.png" }, { name: "建筑", type: "architecture", cover: GlobalGetApi+"https://static.wetab.link/hitab/wallpaper-cover/structure.png" }, { name: "动物", type: "animals", cover: GlobalGetApi+"https://static.wetab.link/hitab/wallpaper-cover/animal.png" }, { name: "旅行", type: "travel", cover: GlobalGetApi+"https://static.wetab.link/hitab/wallpaper-cover/travel.png" }, { name: "美食", type: "food-drink", cover: GlobalGetApi+"https://static.wetab.link/hitab/wallpaper-cover/food.png" }, { name: "动漫", type: "anime", cover: GlobalGetApi+"https://static.wetab.link/hitab/wallpaper-cover/Anime.png" }, { name: "运动", type: "athletics", cover: GlobalGetApi+"https://static.wetab.link/hitab/wallpaper-cover/sport.png" }, { name: "技术", type: "technology", cover: GlobalGetApi+"https://static.wetab.link/hitab/wallpaper-cover/technology.png" }, { name: "街头", type: "street-photography", cover: GlobalGetApi+"https://static.wetab.link/hitab/wallpaper-cover/street.png" }], n = (0, l.Q_)("wallpaper-image", { state: () => ({ wallpaperTypeList: i, selectedType: i[0], isRandom: !1 }), actions: { getWallpapers: async t => await (0, o.L1)(t), getRandomWallpapers: async t => await (0, o.DZ)(t), setSelectedType(t) { this.selectedType = t }, setIsRandom(t) { this.isRandom = t } } }) }, 24182: (t, e, a) => { a.d(e, { o: () => l }); const l = (0, a(10435).Q_)("wallpaper-settings-main", { state: () => ({ curTab: 0, showMoreSetting: !1, moreSettingMenu: "auto-replace" }), actions: { setCurTab(t) { this.curTab = t }, setMoreSettingShow(t) { this.showMoreSetting = t }, setMenu(t) { this.moreSettingMenu = t } } }) }, 90188: (t, e, a) => { a.d(e, { Z: () => c }); var l = a(57268), o = a(94209), i = a(29445); const n = { class: "hi-cell-group not-last:mb-[20px] not-last:border-b-[1px] not-last:border-color-m2 not-last:border-opacity-[0.06] not-last:pb-[20px]" }, s = { class: "font-ali-75 text-[16px] text-color-t1" }, r = { class: "pt-[16px]" }, p = { key: 0 }, c = (0, l.aZ)({ __name: "hi-cell-group", props: { title: { default: "" } }, setup(t) { const e = t, a = (0, l.Rr)(); return (t, c) => ((0, l.wg)(), (0, l.iD)("div", n, [(0, l._)("div", s, (0, o.toDisplayString)(e.title), 1), (0, l._)("div", r, [(0, l.WI)(t.$slots, "default"), (0, i.SU)(a).content ? ((0, l.wg)(), (0, l.iD)("div", p, [(0, l.WI)(t.$slots, "content")])) : (0, l.kq)("", !0)])])) } }) }, 35400: (t, e, a) => { a.d(e, { Z: () => r }); var l = a(57268), o = a(94209); const i = { class: "hi-cell not-last:mb-[20px]" }, n = { class: "flex-1 text-[14px] text-color-t2" }, s = { class: "flex-shrink-0" }, r = (0, l.aZ)({ __name: "hi-cell", props: { title: { default: "" }, disabled: { type: Boolean, default: !1 } }, setup(t) { const e = t; return (a, r) => ((0, l.wg)(), (0, l.iD)("div", i, [(0, l._)("div", { class: (0, o.normalizeClass)(["flex items-center justify-between", [{ "pointer-events-none opacity-30": t.disabled }]]) }, [(0, l._)("span", n, (0, o.toDisplayString)(e.title), 1), (0, l._)("div", s, [(0, l.WI)(a.$slots, "default")])], 2)])) } }) }, 88828: (t, e, a) => { a.r(e), a.d(e, { default: () => _ }); var l = a(90188), o = a(23709), i = a(35400), n = a(49466), s = a(57268), r = a(94209), p = a(29445), c = a(10435), u = a(24780), m = a(3627), b = a(24182); const d = { class: "mb:py-[30px h-full px-[70px] py-[40px] mb:px-[20px]" }, g = (0, s._)("i", { class: "iconfont icon-return_icon text-[18px]" }, null, -1), x = { class: "ml-[12px] font-ali-65 text-[16px]" }, y = { class: "pt-[8px]" }, v = { class: "flex flex-wrap pt-[20px] mb:gap-[10px]" }, h = { class: "font-ali-55 text-[14px]" }, w = ["onClick"], f = { class: "font-ali-55 text-[14px]" }, _ = (0, s.aZ)({ __name: "wallpaper-setting-autoreplace", setup(t) { const e = (0, b.o)(), a = (0, u.L)(), { wallpaperTypeList: _ } = (0, c.Jk)(a), k = (0, m.M)(), { autoReplacement: S } = (0, c.Jk)(k), T = (0, p.iH)({ image: { text: "精选图片" }, dynamic: { text: "动态壁纸" }, gradient: { text: "渐变背景" } }), D = (0, p.iH)({ hourly: { text: "每小时" }, daily: { text: "每天" } }); function U(t) { const e = { ...S.value }; "all" === t ? e.categroy = "all" : ("all" === e.categroy && (e.categroy = []), e.categroy.includes(t) ? e.categroy = e.categroy.filter((e => e !== t)) : e.categroy.push(t)), k.setAutoReplacement(e) } function R(t) { const e = { ...S.value }; e.enable = t, t && (e.lastReplaceTime = (new Date).valueOf()), k.setAutoReplacement(e) } function W(t) { const e = { ...S.value }; e.time = t, "daily" === t && (e.lastReplaceTime = (new Date).getTime()), k.setAutoReplacement(e) } function C(t) { const e = t, a = { ...S.value }; a.bgType = e, a.categroy = "all", k.setAutoReplacement(a) } function Z() { e.setMoreSettingShow(!1) } return (t, e) => { const a = n.Z, c = i.Z, u = o.Z, m = l.Z; return (0, s.wg)(), (0, s.iD)("div", d, [(0, s._)("div", { class: "inline-flex cursor-pointer items-center text-color-t1", onClick: Z }, [g, (0, s._)("span", x, (0, r.toDisplayString)("自动切换壁纸"), 1)]), (0, s._)("div", y, [(0, s.Wm)(m, { title: "" }, { default: (0, s.w5)((() => [(0, s.Wm)(c, { title: "自动切换背景图" }, { default: (0, s.w5)((() => [(0, s.Wm)(a, { value: (0, p.SU)(S).enable, "onUpdate:value": R }, null, 8, ["value"])])), _: 1 }, 8, ["title"]), (0, s.Wm)(c, { title: "自动切换时间" }, { default: (0, s.w5)((() => [(0, s.Wm)(u, { value: (0, p.SU)(S).time, options: D.value, "onUpdate:value": W }, null, 8, ["value", "options"])])), _: 1 }, 8, ["title"]), (0, s.Wm)(c, { title: "自动切换背景类型" }, { default: (0, s.w5)((() => [(0, s.Wm)(u, { value: (0, p.SU)(S).bgType, options: T.value, "onUpdate:value": C }, null, 8, ["value", "options"])])), _: 1 }, 8, ["title"])])), _: 1 })]), (0, s._)("div", v, [(0, s._)("div", { class: (0, r.normalizeClass)(["mb-[12px] flex h-[28px] w-[112px] items-center justify-center rounded-[6px] border border-solid border-color-m2 border-opacity-[0.08] transition-colors mb:m-0 mb:w-1/3", ["all" === (0, p.SU)(S).categroy ? "bg-color-b2 text-color-t1" : "text-color-t3", (0, p.SU)(S).enable ? "cursor-pointer hover:bg-color-b2 hover:text-color-t1" : ""]]), onClick: e[0] || (e[0] = t => U("all")) }, [(0, s._)("span", h, (0, r.toDisplayString)("全部"), 1)], 2), "image" === (0, p.SU)(S).bgType ? ((0, s.wg)(!0), (0, s.iD)(s.HY, { key: 0 }, (0, s.Ko)((0, p.SU)(_), ((t, e) => ((0, s.wg)(), (0, s.iD)("div", { key: t.type, class: (0, r.normalizeClass)(["mb-[12px] flex h-[28px] w-[112px] items-center justify-center rounded-[6px] border border-solid border-color-m2 border-opacity-[0.08] transition-colors mb:m-0 mb:w-1/3", [e % 3 == 0 ? "mx-[12px]" : "", (0, p.SU)(S).categroy.includes(t.type) ? "bg-color-b2 text-color-t1" : "text-color-t3", (0, p.SU)(S).enable ? "cursor-pointer hover:bg-color-b2 hover:text-color-t1" : ""]]), onClick: e => U(t.type) }, [(0, s._)("span", f, (0, r.toDisplayString)(t.name), 1)], 10, w)))), 128)) : (0, s.kq)("", !0)])]) } } }) } }]);